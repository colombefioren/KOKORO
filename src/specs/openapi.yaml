openapi: 3.1.0
info:
  title: Kokoro API
  version: 1.0.0
  description: Kokoro API powers all core features of the web app.

servers:
  - url: https://kokoro-colombe.vercel.app
    description: Production server
  - url: http://localhost:3000
    description: Local development server

paths:
  /bio:
    post:
      summary: Update the current user's bio
      description: |
        Updates the **bio field** of the currently authenticated user.  
        This endpoint is typically called from the profile settings screen when a user edits their personal description.

        The new bio is a simple text string that appears on the user's profile and may be visible to others in rooms, chats, or social spaces — depending on privacy settings.

        Requires a valid BetterAuth session (sent via session cookie) to verify user identity.
      operationId: updateUserBio
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "Just vibing and building projects!"
      responses:
        "200":
          description: Bio updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Bio updated successfully
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Database or server issue prevented the update.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update bio

  /user:
    get:
      summary: Get the currently authenticated user's profile
      description: Retrieves the profile of the currently authenticated user.
      operationId: getUser
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get user

  /friends:
    get:
      summary: Get user's friends list
      description: Retrieves the list of accepted friends for the currently authenticated user.
      operationId: getFriends
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Friends list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to retrieve friends list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get friends

  /friends/requests:
    get:
      summary: Get pending friend requests
      description: Retrieves pending friend requests sent to the current user.
      operationId: getPendingFriendRequests
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Pending friend requests retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to retrieve pending requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get pending friend requests
    post:
      summary: Send a friend request
      description: Send a friend request to another user. Cannot send to yourself and duplicate requests are prevented.
      operationId: sendFriendRequest
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - receiverId
              properties:
                receiverId:
                  type: string
                  description: ID of the user to send friend request to
                  example: "user_123"
      responses:
        "201":
          description: Friend request sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friendship"
        "400":
          description: Bad Request – Invalid input or business rule violation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "You cannot send a friend request to yourself"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to send friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to send friend request

  /friends/accept-request:
    post:
      summary: Accept a friend request
      description: Accept a pending friend request. Only the receiver of the request can accept it.
      operationId: acceptFriendRequest
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requesterId
              properties:
                requesterId:
                  type: string
                  description: ID of the user who sent the request to accept
                  example: "friend_req_123"
      responses:
        "200":
          description: Friend request accepted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friendship"
        "400":
          description: Bad Request – friendshipId is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: friendshipId is required
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Not Found – Friend request not found or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Friend request not found or unauthorized
        "500":
          description: Internal Server Error – Failed to accept friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to accept friend request

  /friends/decline-request:
    delete:
      summary: Decline or delete a friend request
      description: Decline a pending friend request. This permanently deletes the friendship record.
      operationId: declineFriendRequest
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requesterId
              properties:
                requesterId:
                  type: string
                  description: ID of the user who sent the request to decline
                  example: "friend_req_123"
      responses:
        "200":
          description: Friend request declined successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "400":
          description: Bad Request – friendshipId is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: friendshipId is required
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Not Found – Friend request not found or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Friend request not found or unauthorized
        "500":
          description: Internal Server Error – Failed to decline friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to decline friend request

  /friends/record:
    get:
      summary: Get all friendship records
      description: |
        Retrieves **all friendship records** (both pending and accepted) involving the currently authenticated user — whether the user is the requester or receiver.

        Useful for debugging or for features that need to display the complete friendship state.
      operationId: getFriendshipRecords
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Friendship records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FriendshipRecord"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to fetch friendship records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to fetch friendships

  /users:
    get:
      summary: Search users
      description: Search for users by name, email, or username. Excludes the current user from results.
      operationId: searchUsers
      security:
        - betterAuthSession: []
      parameters:
        - name: q
          in: query
          description: Search query to filter users by name, email, or username
          required: false
          schema:
            type: string
            example: "john"
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to search users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get users

components:
  securitySchemes:
    betterAuthSession:
      type: apiKey
      in: header
      name: Cookie
      description: >
        BetterAuth session cookie (e.g., `better-auth.session=...`).
        This cookie authenticates the user and must be present in all requests requiring authorization.

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
          nullable: true
        email:
          type: string
        emailVerified:
          type: boolean
        isOnline:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
        displayUsername:
          type: string
          nullable: true

    Friendship:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        receiverId:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    FriendshipRecord:
      type: object
      properties:
        id:
          type: string
          example: "fr_12345"
        requester:
          $ref: "#/components/schemas/User"
        receiver:
          $ref: "#/components/schemas/User"
        status:
          type: string
          enum: [PENDING, ACCEPTED]
          example: "ACCEPTED"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
