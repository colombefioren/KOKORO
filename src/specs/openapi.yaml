openapi: 3.1.0

info:
  title: Kokoro API
  version: 1.0.0
  description: Kokoro API powers all core features of the web app including user management, friendships, rooms, and chat.

servers:
  - url: https://kokoro-colombe.vercel.app
    description: Production server
  - url: http://localhost:3000
    description: Local development server

paths:
  /bio:
    post:
      summary: Update the current user's bio
      description: |
        Updates the **bio field** of the currently authenticated user.  
        This endpoint is typically called from the profile settings screen when a user edits their personal description.

        The new bio is a simple text string that appears on the user's profile and may be visible to others in rooms, chats, or social spaces — depending on privacy settings.

        Requires a valid BetterAuth session (sent via session cookie) to verify user identity.
      operationId: updateUserBio
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: string
              example: "Just vibing and building projects!"
      responses:
        "200":
          description: Bio updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: string
                    example: Bio updated successfully
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Database or server issue prevented the update.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update bio

  /user:
    get:
      summary: Get the currently authenticated user's profile
      description: Retrieves the profile of the currently authenticated user.
      operationId: getUser
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: User not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: User not found
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get user

  /friends:
    get:
      summary: Get user's friends list
      description: Retrieves the list of accepted friends for the currently authenticated user.
      operationId: getFriends
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Friends list retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to retrieve friends list.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get friends

  /friends/requests:
    get:
      summary: Get pending friend requests
      description: Retrieves pending friend requests sent to the current user.
      operationId: getPendingFriendRequests
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Pending friend requests retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to retrieve pending requests.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get pending friend requests
    post:
      summary: Send a friend request
      description: Send a friend request to another user. Cannot send to yourself and duplicate requests are prevented.
      operationId: sendFriendRequest
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - receiverId
              properties:
                receiverId:
                  type: string
                  description: ID of the user to send friend request to
                  example: "user_123"
      responses:
        "201":
          description: Friend request sent successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friendship"
        "400":
          description: Bad Request – Invalid input or business rule violation.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "You cannot send a friend request to yourself"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to send friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to send friend request

  /friends/accept-request:
    post:
      summary: Accept a friend request
      description: Accept a pending friend request. Only the receiver of the request can accept it.
      operationId: acceptFriendRequest
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - requesterId
              properties:
                requesterId:
                  type: string
                  description: ID of the user who sent the request to accept
                  example: "friend_req_123"
      responses:
        "200":
          description: Friend request accepted successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Friendship"
        "400":
          description: Bad Request – friendshipId is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: friendshipId is required
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Not Found – Friend request not found or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Friend request not found or unauthorized
        "500":
          description: Internal Server Error – Failed to accept friend request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to accept friend request

  /friends/decline-request:
    delete:
      summary: Decline a friend request or remove a friend
      description: >
        Decline a pending friend request or remove an existing friend. 
        This permanently deletes the friendship record.
      operationId: deleteFriendship
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - friendId
              properties:
                friendId:
                  type: string
                  description: ID of the friend or requester to remove or decline
                  example: "friend_123"
      responses:
        "200":
          description: Friendship successfully removed or request declined
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  message:
                    type: string
                    example: Friendship removed or request declined
        "400":
          description: Bad Request – friendId is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: friendId is required
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Not Found – Friendship not found or unauthorized.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Friendship not found
        "500":
          description: Internal Server Error – Failed to remove friend or decline request.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to remove friend or decline request

  /friends/record:
    get:
      summary: Get all friendship records
      description: |
        Retrieves **all friendship records** (both pending and accepted) involving the currently authenticated user — whether the user is the requester or receiver.

        Useful for debugging or for features that need to display the complete friendship state.
      operationId: getFriendshipRecords
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Friendship records retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FriendshipRecord"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to fetch friendship records.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to fetch friendships

  /users:
    get:
      summary: Search users
      description: Search for users by name, email, or username. Excludes the current user from results.
      operationId: searchUsers
      security:
        - betterAuthSession: []
      parameters:
        - name: q
          in: query
          description: Search query to filter users by name, email, or username
          required: false
          schema:
            type: string
            example: "john"
      responses:
        "200":
          description: Users retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/User"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to search users.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get users

  /rooms:
    get:
      summary: Get all rooms wether the users is there or not
      description: |
        Retrieves **all rooms**.
      operationId: getAllRooms
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomRecord"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to fetch rooms.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get rooms
  /rooms/membership:
    get:
      summary: Get all rooms of the authenticated user
      description: |
        Retrieves **all rooms** that the currently authenticated user is a member of.
        Includes room details, chat information, and all members of each room.
      operationId: getUserRooms
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Rooms retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/RoomRecord"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to fetch rooms.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get rooms

  /rooms/{id}:
    patch:
      summary: Update a room
      description: |
        Updates the specified **room**.  
        Only the **host (creator)** of the room can update it.
      operationId: updateRoom
      security:
        - betterAuthSession: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the room to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/RoomUpdateInput"
      responses:
        "200":
          description: Room updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Room not found or user is not the host
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Room not found or you are not the host
        "500":
          description: Internal Server Error – Failed to update room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update room
    delete:
      summary: Delete a room
      description: |
        Deletes the specified **room** and all its related data.
        Only the **host (creator)** of the room can perform this action.
      operationId: deleteRoom
      security:
        - betterAuthSession: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: ID of the room to delete
      responses:
        "200":
          description: Room deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Room not found or user is not the host
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Room not found or you are not the host
        "500":
          description: Internal Server Error – Failed to delete room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to delete room
  /rooms/{id}/leave:
    delete:
      summary: Leave a room
      description: >
        Allows a user to leave a room they are a member of. Hosts **cannot** leave the room.
      operationId: leaveRoom
      security:
        - betterAuthSession: []
      parameters:
        - name: id
          in: path
          description: The ID of the room to leave
          required: true
          schema:
            type: string
            example: "room_12345"
      responses:
        "200":
          description: Successfully left the room
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "You have left the room"
        "401":
          description: Unauthorized – The user session is invalid or missing
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "unauthorized"
        "403":
          description: Forbidden – User cannot leave this room
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Hosts cannot leave the room"
        "500":
          description: Internal Server Error – Failed to leave room
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: "Failed to leave room"

  /rooms/{id}/favorite:
    patch:
      summary: Toggle room favorite status
      description: |
        Toggles the `isFavorite` flag for a room **that the authenticated user is a member of**.  
        The user does **not** need to be the host — any member can mark or unmark a room as favorite.
      operationId: toggleRoomFavorite
      security:
        - betterAuthSession: []
      parameters:
        - name: id
          in: path
          required: true
          description: The unique ID of the room to update
          schema:
            type: string
            example: "room_12345"
      responses:
        "200":
          description: Room favorite status toggled successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Room"
        "401":
          description: Unauthorized – Missing or invalid session.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Unauthorized
        "403":
          description: Forbidden – User is not a member of the room.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: You are not a member of this room
        "500":
          description: Internal Server Error – Failed to toggle favorite.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to update favorite status

  /chats:
    post:
      summary: Create a new chat
      description: Creates a private or room chat based on the given parameters.
      operationId: createChat
      security:
        - betterAuthSession: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                type:
                  type: string
                  enum: [PRIVATE, ROOM]
                memberIds:
                  type: array
                  items:
                    type: string
                name:
                  type: string
              required: [type, memberIds]
      responses:
        "200":
          description: Chat created or existing private chat returned
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Chat"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to create chat.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to create chat
    get:
      summary: Get all chats for current user
      description: Retrieves all chats where the current user is an active member (not deleted).
      operationId: getUserChats
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: List of chats excluding deleted ones
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chat"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to retrieve chats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get chats

  /chats/{chatId}:
    delete:
      summary: Soft delete chat for current user
      description: Marks the chat as deleted for the current user (soft delete from chat members).
      operationId: softDeleteChat
      security:
        - betterAuthSession: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Chat soft deleted for the current user
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Chat not found or user is not a member.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Chat not found
        "500":
          description: Internal Server Error – Failed to delete chat.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to delete chat

  /chats/{chatId}/messages:
    get:
      summary: Get all messages in a chat
      description: Retrieves all messages from a chat that haven't been deleted for the current user.
      operationId: getChatMessages
      security:
        - betterAuthSession: []
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: List of chat messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Message"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "404":
          description: Chat not found or user is not a member.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Chat not found
        "500":
          description: Internal Server Error – Failed to retrieve messages.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to get messages

  /chats/private:
    get:
      summary: Get all private chats for the current user
      description: |
        Returns all private (1:1) chats the current user is a member of, excluding chats soft-deleted for that user.
      operationId: getPrivateChats
      security:
        - betterAuthSession: []
      responses:
        "200":
          description: Private chats retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Chat"
        "401":
          description: Unauthorized – The user session is invalid or missing.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: unauthorized
        "500":
          description: Internal Server Error – Failed to fetch private chats.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Failed to fetch private chats

components:
  securitySchemes:
    betterAuthSession:
      type: apiKey
      in: header
      name: Cookie
      description: >
        BetterAuth session cookie (e.g., `better-auth.session=...`).
        This cookie authenticates the user and must be present in all requests requiring authorization.

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: string
          nullable: true
        email:
          type: string
        emailVerified:
          type: boolean
        isOnline:
          type: boolean
          nullable: true
        bio:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        username:
          type: string
          nullable: true
        displayUsername:
          type: string
          nullable: true

    Friendship:
      type: object
      properties:
        id:
          type: string
        requesterId:
          type: string
        receiverId:
          type: string
        status:
          type: string
          enum:
            - PENDING
            - ACCEPTED
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    FriendshipRecord:
      type: object
      properties:
        id:
          type: string
          example: "fr_12345"
        requester:
          $ref: "#/components/schemas/User"
        receiver:
          $ref: "#/components/schemas/User"
        status:
          type: string
          enum: [PENDING, ACCEPTED]
          example: "ACCEPTED"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    Room:
      type: object
      properties:
        id:
          type: string
          example: "room_12345"
        name:
          type: string
          example: "Study Group"
        type:
          type: string
          enum: [PUBLIC, PRIVATE, FRIENDS]
          example: "PRIVATE"
        description:
          type: string
          nullable: true
          example: "A private space for coding discussions."
        createdBy:
          type: string
          example: "user_6789"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        maxMembers:
          type: integer
          nullable: true
          example: 10
        isActive:
          type: boolean
          example: true
        isFavorite:
          type: boolean
          example: false
        chatId:
          type: string
          nullable: true
          example: "chat_12345"

    RoomMember:
      type: object
      properties:
        id:
          type: string
          example: "member_001"
        userId:
          type: string
          example: "user_6789"
        roomId:
          type: string
          example: "room_12345"
        role:
          type: string
          enum: [HOST, MEMBER]
          example: "HOST"
        joinedAt:
          type: string
          format: date-time
        user:
          $ref: "#/components/schemas/User"

    Chat:
      type: object
      properties:
        id:
          type: string
          example: "chat_12345"
        type:
          type: string
          enum: [PRIVATE, ROOM]
          example: "ROOM"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        name:
          type: string
          nullable: true
        members:
          type: array
          items:
            $ref: "#/components/schemas/ChatMember"
        messages:
          type: array
          items:
            $ref: "#/components/schemas/Message"

    ChatMember:
      type: object
      properties:
        id:
          type: string
          example: "chat_member_001"
        userId:
          type: string
          example: "user_6789"
        chatId:
          type: string
          example: "chat_12345"
        joinedAt:
          type: string
          format: date-time
        deletedAt:
          type: string
          format: date-time
          nullable: true
        user:
          $ref: "#/components/schemas/User"

    Message:
      type: object
      properties:
        id:
          type: string
          example: "msg_12345"
        chatId:
          type: string
          example: "chat_12345"
        senderId:
          type: string
          example: "user_6789"
        content:
          type: string
          example: "Hello everyone!"
        imageUrl:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        sender:
          $ref: "#/components/schemas/User"

    RoomRecord:
      type: object
      properties:
        id:
          type: string
          example: "room_12345"
        name:
          type: string
          example: "Study Group"
        type:
          type: string
          enum: [PUBLIC, PRIVATE, FRIENDS]
          example: "PRIVATE"
        description:
          type: string
          nullable: true
          example: "A private space for coding discussions."
        createdBy:
          type: string
          example: "user_6789"
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
        maxMembers:
          type: integer
          nullable: true
        isActive:
          type: boolean
        isFavorite:
          type: boolean
        chat:
          $ref: "#/components/schemas/Chat"
        members:
          type: array
          items:
            $ref: "#/components/schemas/RoomMember"

    RoomUpdateInput:
      type: object
      properties:
        name:
          type: string
          example: "New Room Name"
        description:
          type: string
          example: "Updated description"
        isFavorite:
          type: boolean
          example: true
        isActive:
          type: boolean
          example: false
        maxMembers:
          type: integer
          example: 20
